version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: autofutures-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://autofutures:autofutures123@mysql:3306/autofutures
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DEBUG=true
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - autofutures-network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: autofutures-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - autofutures-network
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: autofutures-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword123
      - MYSQL_DATABASE=autofutures
      - MYSQL_USER=autofutures
      - MYSQL_PASSWORD=autofutures123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - autofutures-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: autofutures-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - autofutures-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # phpMyAdmin (опционально, для управления БД)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: autofutures-phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=autofutures
      - PMA_PASSWORD=autofutures123
    depends_on:
      - mysql
    networks:
      - autofutures-network
    restart: unless-stopped

  # Nginx (опционально, для production)
  nginx:
    image: nginx:alpine
    container_name: autofutures-nginx
    ports:
     # - "80:80"
     # - "443:443"
       - "8080:80"   # внешний порт хоста : внутренний порт контейнера
       - "8443:443"  # если нужен HTTPS
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - autofutures-network
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  autofutures-network:
    driver: bridge
